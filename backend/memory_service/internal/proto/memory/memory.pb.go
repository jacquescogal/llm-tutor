// memory.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: proto/memory.proto

package memory

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserSubjectRole int32

const (
	UserSubjectRole_USER_SUBJECT_ROLE_UNDEFINED UserSubjectRole = 0
	UserSubjectRole_USER_SUBJECT_ROLE_ADMIN     UserSubjectRole = 1 // can give access to other users + editor rights
	UserSubjectRole_USER_SUBJECT_ROLE_EDITOR    UserSubjectRole = 2 // CRUD + viewer rights
	UserSubjectRole_USER_SUBJECT_ROLE_VIEWER    UserSubjectRole = 3 // allows reads when subject is not public
)

// Enum value maps for UserSubjectRole.
var (
	UserSubjectRole_name = map[int32]string{
		0: "USER_SUBJECT_ROLE_UNDEFINED",
		1: "USER_SUBJECT_ROLE_ADMIN",
		2: "USER_SUBJECT_ROLE_EDITOR",
		3: "USER_SUBJECT_ROLE_VIEWER",
	}
	UserSubjectRole_value = map[string]int32{
		"USER_SUBJECT_ROLE_UNDEFINED": 0,
		"USER_SUBJECT_ROLE_ADMIN":     1,
		"USER_SUBJECT_ROLE_EDITOR":    2,
		"USER_SUBJECT_ROLE_VIEWER":    3,
	}
)

func (x UserSubjectRole) Enum() *UserSubjectRole {
	p := new(UserSubjectRole)
	*p = x
	return p
}

func (x UserSubjectRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSubjectRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_memory_proto_enumTypes[0].Descriptor()
}

func (UserSubjectRole) Type() protoreflect.EnumType {
	return &file_proto_memory_proto_enumTypes[0]
}

func (x UserSubjectRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSubjectRole.Descriptor instead.
func (UserSubjectRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{0}
}

type UserModuleRole int32

const (
	UserModuleRole_USER_MODULE_ROLE_UNDEFINED UserModuleRole = 0
	UserModuleRole_USER_MODULE_ROLE_ADMIN     UserModuleRole = 1 // can give access to other users + editor rights
	UserModuleRole_USER_MODULE_ROLE_EDITOR    UserModuleRole = 2 // CRUD + viewer rights
	UserModuleRole_USER_MODULE_ROLE_VIEWER    UserModuleRole = 3 // allows reads when doc is not public
)

// Enum value maps for UserModuleRole.
var (
	UserModuleRole_name = map[int32]string{
		0: "USER_MODULE_ROLE_UNDEFINED",
		1: "USER_MODULE_ROLE_ADMIN",
		2: "USER_MODULE_ROLE_EDITOR",
		3: "USER_MODULE_ROLE_VIEWER",
	}
	UserModuleRole_value = map[string]int32{
		"USER_MODULE_ROLE_UNDEFINED": 0,
		"USER_MODULE_ROLE_ADMIN":     1,
		"USER_MODULE_ROLE_EDITOR":    2,
		"USER_MODULE_ROLE_VIEWER":    3,
	}
)

func (x UserModuleRole) Enum() *UserModuleRole {
	p := new(UserModuleRole)
	*p = x
	return p
}

func (x UserModuleRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserModuleRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_memory_proto_enumTypes[1].Descriptor()
}

func (UserModuleRole) Type() protoreflect.EnumType {
	return &file_proto_memory_proto_enumTypes[1]
}

func (x UserModuleRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserModuleRole.Descriptor instead.
func (UserModuleRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{1}
}

type UploadStatus int32

const (
	UploadStatus_UPLOAD_STATUS_NOT_STARTED      UploadStatus = 0
	UploadStatus_UPLOAD_STATUS_SUCCESS          UploadStatus = 1
	UploadStatus_UPLOAD_STATUS_FAILED           UploadStatus = 2
	UploadStatus_UPLOAD_STATUS_UPLOADING        UploadStatus = 3
	UploadStatus_UPLOAD_STATUS_PENDING_APPROVAL UploadStatus = 4
	UploadStatus_UPLOAD_STATUS_INSERTING        UploadStatus = 5
)

// Enum value maps for UploadStatus.
var (
	UploadStatus_name = map[int32]string{
		0: "UPLOAD_STATUS_NOT_STARTED",
		1: "UPLOAD_STATUS_SUCCESS",
		2: "UPLOAD_STATUS_FAILED",
		3: "UPLOAD_STATUS_UPLOADING",
		4: "UPLOAD_STATUS_PENDING_APPROVAL",
		5: "UPLOAD_STATUS_INSERTING",
	}
	UploadStatus_value = map[string]int32{
		"UPLOAD_STATUS_NOT_STARTED":      0,
		"UPLOAD_STATUS_SUCCESS":          1,
		"UPLOAD_STATUS_FAILED":           2,
		"UPLOAD_STATUS_UPLOADING":        3,
		"UPLOAD_STATUS_PENDING_APPROVAL": 4,
		"UPLOAD_STATUS_INSERTING":        5,
	}
)

func (x UploadStatus) Enum() *UploadStatus {
	p := new(UploadStatus)
	*p = x
	return p
}

func (x UploadStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_memory_proto_enumTypes[2].Descriptor()
}

func (UploadStatus) Type() protoreflect.EnumType {
	return &file_proto_memory_proto_enumTypes[2]
}

func (x UploadStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadStatus.Descriptor instead.
func (UploadStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{2}
}

type QuestionType int32

const (
	QuestionType_QUESTION_TYPE_UNDEFINED        QuestionType = 0
	QuestionType_QUESTION_TYPE_MCQ              QuestionType = 1
	QuestionType_QUESTION_TYPE_MULTI_ANSWER_MCQ QuestionType = 2
	QuestionType_QUESTION_TYPE_SHORT_ANSWER     QuestionType = 3
	QuestionType_QUESTION_TYPE_LONG_ANSWER      QuestionType = 4
)

// Enum value maps for QuestionType.
var (
	QuestionType_name = map[int32]string{
		0: "QUESTION_TYPE_UNDEFINED",
		1: "QUESTION_TYPE_MCQ",
		2: "QUESTION_TYPE_MULTI_ANSWER_MCQ",
		3: "QUESTION_TYPE_SHORT_ANSWER",
		4: "QUESTION_TYPE_LONG_ANSWER",
	}
	QuestionType_value = map[string]int32{
		"QUESTION_TYPE_UNDEFINED":        0,
		"QUESTION_TYPE_MCQ":              1,
		"QUESTION_TYPE_MULTI_ANSWER_MCQ": 2,
		"QUESTION_TYPE_SHORT_ANSWER":     3,
		"QUESTION_TYPE_LONG_ANSWER":      4,
	}
)

func (x QuestionType) Enum() *QuestionType {
	p := new(QuestionType)
	*p = x
	return p
}

func (x QuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_memory_proto_enumTypes[3].Descriptor()
}

func (QuestionType) Type() protoreflect.EnumType {
	return &file_proto_memory_proto_enumTypes[3]
}

func (x QuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionType.Descriptor instead.
func (QuestionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{3}
}

type ORDER_BY_DIRECTION int32

const (
	ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED ORDER_BY_DIRECTION = 0
	ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_ASC       ORDER_BY_DIRECTION = 1
	ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_DESC      ORDER_BY_DIRECTION = 2
)

// Enum value maps for ORDER_BY_DIRECTION.
var (
	ORDER_BY_DIRECTION_name = map[int32]string{
		0: "ORDER_BY_DIRECTION_UNDEFINED",
		1: "ORDER_BY_DIRECTION_ASC",
		2: "ORDER_BY_DIRECTION_DESC",
	}
	ORDER_BY_DIRECTION_value = map[string]int32{
		"ORDER_BY_DIRECTION_UNDEFINED": 0,
		"ORDER_BY_DIRECTION_ASC":       1,
		"ORDER_BY_DIRECTION_DESC":      2,
	}
)

func (x ORDER_BY_DIRECTION) Enum() *ORDER_BY_DIRECTION {
	p := new(ORDER_BY_DIRECTION)
	*p = x
	return p
}

func (x ORDER_BY_DIRECTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_BY_DIRECTION) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_memory_proto_enumTypes[4].Descriptor()
}

func (ORDER_BY_DIRECTION) Type() protoreflect.EnumType {
	return &file_proto_memory_proto_enumTypes[4]
}

func (x ORDER_BY_DIRECTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_BY_DIRECTION.Descriptor instead.
func (ORDER_BY_DIRECTION) EnumDescriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{4}
}

type ORDER_BY_FIELD int32

const (
	ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED    ORDER_BY_FIELD = 0
	ORDER_BY_FIELD_ORDER_BY_FIELD_ID           ORDER_BY_FIELD = 1
	ORDER_BY_FIELD_ORDER_BY_FIELD_TITLE        ORDER_BY_FIELD = 2
	ORDER_BY_FIELD_ORDER_BY_FIELD_CREATED_TIME ORDER_BY_FIELD = 3
	ORDER_BY_FIELD_ORDER_BY_FIELD_UPDATED_TIME ORDER_BY_FIELD = 4
)

// Enum value maps for ORDER_BY_FIELD.
var (
	ORDER_BY_FIELD_name = map[int32]string{
		0: "ORDER_BY_FIELD_UNDEFINED",
		1: "ORDER_BY_FIELD_ID",
		2: "ORDER_BY_FIELD_TITLE",
		3: "ORDER_BY_FIELD_CREATED_TIME",
		4: "ORDER_BY_FIELD_UPDATED_TIME",
	}
	ORDER_BY_FIELD_value = map[string]int32{
		"ORDER_BY_FIELD_UNDEFINED":    0,
		"ORDER_BY_FIELD_ID":           1,
		"ORDER_BY_FIELD_TITLE":        2,
		"ORDER_BY_FIELD_CREATED_TIME": 3,
		"ORDER_BY_FIELD_UPDATED_TIME": 4,
	}
)

func (x ORDER_BY_FIELD) Enum() *ORDER_BY_FIELD {
	p := new(ORDER_BY_FIELD)
	*p = x
	return p
}

func (x ORDER_BY_FIELD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_BY_FIELD) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_memory_proto_enumTypes[5].Descriptor()
}

func (ORDER_BY_FIELD) Type() protoreflect.EnumType {
	return &file_proto_memory_proto_enumTypes[5]
}

func (x ORDER_BY_FIELD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_BY_FIELD.Descriptor instead.
func (ORDER_BY_FIELD) EnumDescriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{5}
}

// Common Type
type MemberAccessKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubjectId uint64 `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *MemberAccessKeys) Reset() {
	*x = MemberAccessKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberAccessKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAccessKeys) ProtoMessage() {}

func (x *MemberAccessKeys) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberAccessKeys.ProtoReflect.Descriptor instead.
func (*MemberAccessKeys) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{0}
}

func (x *MemberAccessKeys) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MemberAccessKeys) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

// SubjectService
type CreateSubjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // This is the user_id of the user who is creating the subject
	SubjectName        string `protobuf:"bytes,2,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	SubjectDescription string `protobuf:"bytes,3,opt,name=subject_description,json=subjectDescription,proto3" json:"subject_description,omitempty"`
	IsPublic           bool   `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *CreateSubjectRequest) Reset() {
	*x = CreateSubjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubjectRequest) ProtoMessage() {}

func (x *CreateSubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubjectRequest.ProtoReflect.Descriptor instead.
func (*CreateSubjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubjectRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateSubjectRequest) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *CreateSubjectRequest) GetSubjectDescription() string {
	if x != nil {
		return x.SubjectDescription
	}
	return ""
}

func (x *CreateSubjectRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type CreateSubjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSubjectResponse) Reset() {
	*x = CreateSubjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubjectResponse) ProtoMessage() {}

func (x *CreateSubjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubjectResponse.ProtoReflect.Descriptor instead.
func (*CreateSubjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{2}
}

type GetSubjectByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubjectId uint64 `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *GetSubjectByIdRequest) Reset() {
	*x = GetSubjectByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectByIdRequest) ProtoMessage() {}

func (x *GetSubjectByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectByIdRequest.ProtoReflect.Descriptor instead.
func (*GetSubjectByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{3}
}

func (x *GetSubjectByIdRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSubjectByIdRequest) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type GetSubjectByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *DBSubject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *GetSubjectByIdResponse) Reset() {
	*x = GetSubjectByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectByIdResponse) ProtoMessage() {}

func (x *GetSubjectByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectByIdResponse.ProtoReflect.Descriptor instead.
func (*GetSubjectByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubjectByIdResponse) GetSubject() *DBSubject {
	if x != nil {
		return x.Subject
	}
	return nil
}

type GetSubjectsByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           uint64             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageNumber       uint32             `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,4,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,5,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetSubjectsByUserIdRequest) Reset() {
	*x = GetSubjectsByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectsByUserIdRequest) ProtoMessage() {}

func (x *GetSubjectsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetSubjectsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubjectsByUserIdRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSubjectsByUserIdRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetSubjectsByUserIdRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSubjectsByUserIdRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetSubjectsByUserIdRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetSubjectsByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subjects []*DBSubject `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"`
}

func (x *GetSubjectsByUserIdResponse) Reset() {
	*x = GetSubjectsByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectsByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectsByUserIdResponse) ProtoMessage() {}

func (x *GetSubjectsByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectsByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetSubjectsByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{6}
}

func (x *GetSubjectsByUserIdResponse) GetSubjects() []*DBSubject {
	if x != nil {
		return x.Subjects
	}
	return nil
}

type GetSubjectsByNameSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           uint64             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SearchQuery      string             `protobuf:"bytes,2,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetSubjectsByNameSearchRequest) Reset() {
	*x = GetSubjectsByNameSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectsByNameSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectsByNameSearchRequest) ProtoMessage() {}

func (x *GetSubjectsByNameSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectsByNameSearchRequest.ProtoReflect.Descriptor instead.
func (*GetSubjectsByNameSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{7}
}

func (x *GetSubjectsByNameSearchRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSubjectsByNameSearchRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *GetSubjectsByNameSearchRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetSubjectsByNameSearchRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSubjectsByNameSearchRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetSubjectsByNameSearchRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetSubjectsByNameSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subjects []*DBSubject `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"`
}

func (x *GetSubjectsByNameSearchResponse) Reset() {
	*x = GetSubjectsByNameSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectsByNameSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectsByNameSearchResponse) ProtoMessage() {}

func (x *GetSubjectsByNameSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectsByNameSearchResponse.ProtoReflect.Descriptor instead.
func (*GetSubjectsByNameSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{8}
}

func (x *GetSubjectsByNameSearchResponse) GetSubjects() []*DBSubject {
	if x != nil {
		return x.Subjects
	}
	return nil
}

type UpdateSubjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubjectId          uint64 `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	SubjectName        string `protobuf:"bytes,3,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	SubjectDescription string `protobuf:"bytes,4,opt,name=subject_description,json=subjectDescription,proto3" json:"subject_description,omitempty"`
	IsPublic           bool   `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *UpdateSubjectRequest) Reset() {
	*x = UpdateSubjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubjectRequest) ProtoMessage() {}

func (x *UpdateSubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSubjectRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateSubjectRequest) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *UpdateSubjectRequest) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *UpdateSubjectRequest) GetSubjectDescription() string {
	if x != nil {
		return x.SubjectDescription
	}
	return ""
}

func (x *UpdateSubjectRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type UpdateSubjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSubjectResponse) Reset() {
	*x = UpdateSubjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubjectResponse) ProtoMessage() {}

func (x *UpdateSubjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{10}
}

type DeleteSubjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubjectId uint64 `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *DeleteSubjectRequest) Reset() {
	*x = DeleteSubjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubjectRequest) ProtoMessage() {}

func (x *DeleteSubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteSubjectRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteSubjectRequest) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type DeleteSubjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSubjectResponse) Reset() {
	*x = DeleteSubjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubjectResponse) ProtoMessage() {}

func (x *DeleteSubjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{12}
}

// ModuleService
type CreateModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess      *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	ModuleName        string            `protobuf:"bytes,2,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	ModuleDescription string            `protobuf:"bytes,3,opt,name=module_description,json=moduleDescription,proto3" json:"module_description,omitempty"`
	IsPublic          bool              `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *CreateModuleRequest) Reset() {
	*x = CreateModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModuleRequest) ProtoMessage() {}

func (x *CreateModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModuleRequest.ProtoReflect.Descriptor instead.
func (*CreateModuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{13}
}

func (x *CreateModuleRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *CreateModuleRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *CreateModuleRequest) GetModuleDescription() string {
	if x != nil {
		return x.ModuleDescription
	}
	return ""
}

func (x *CreateModuleRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type CreateModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateModuleResponse) Reset() {
	*x = CreateModuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModuleResponse) ProtoMessage() {}

func (x *CreateModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModuleResponse.ProtoReflect.Descriptor instead.
func (*CreateModuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{14}
}

type GetModuleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	ModuleId     uint64            `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *GetModuleByIdRequest) Reset() {
	*x = GetModuleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModuleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModuleByIdRequest) ProtoMessage() {}

func (x *GetModuleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModuleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetModuleByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{15}
}

func (x *GetModuleByIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetModuleByIdRequest) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

type GetModuleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *DBModule `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *GetModuleByIdResponse) Reset() {
	*x = GetModuleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModuleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModuleByIdResponse) ProtoMessage() {}

func (x *GetModuleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModuleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetModuleByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{16}
}

func (x *GetModuleByIdResponse) GetModule() *DBModule {
	if x != nil {
		return x.Module
	}
	return nil
}

type GetModulesBySubjectIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	PageNumber       uint32             `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,4,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,5,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetModulesBySubjectIdRequest) Reset() {
	*x = GetModulesBySubjectIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModulesBySubjectIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModulesBySubjectIdRequest) ProtoMessage() {}

func (x *GetModulesBySubjectIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModulesBySubjectIdRequest.ProtoReflect.Descriptor instead.
func (*GetModulesBySubjectIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{17}
}

func (x *GetModulesBySubjectIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetModulesBySubjectIdRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetModulesBySubjectIdRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetModulesBySubjectIdRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetModulesBySubjectIdRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetModulesBySubjectIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules []*DBModule `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *GetModulesBySubjectIdResponse) Reset() {
	*x = GetModulesBySubjectIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModulesBySubjectIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModulesBySubjectIdResponse) ProtoMessage() {}

func (x *GetModulesBySubjectIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModulesBySubjectIdResponse.ProtoReflect.Descriptor instead.
func (*GetModulesBySubjectIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{18}
}

func (x *GetModulesBySubjectIdResponse) GetModules() []*DBModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

type GetModulesByNameSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	SearchQuery      string             `protobuf:"bytes,2,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetModulesByNameSearchRequest) Reset() {
	*x = GetModulesByNameSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModulesByNameSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModulesByNameSearchRequest) ProtoMessage() {}

func (x *GetModulesByNameSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModulesByNameSearchRequest.ProtoReflect.Descriptor instead.
func (*GetModulesByNameSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{19}
}

func (x *GetModulesByNameSearchRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetModulesByNameSearchRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *GetModulesByNameSearchRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetModulesByNameSearchRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetModulesByNameSearchRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetModulesByNameSearchRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetModulesByNameSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules []*DBModule `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *GetModulesByNameSearchResponse) Reset() {
	*x = GetModulesByNameSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModulesByNameSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModulesByNameSearchResponse) ProtoMessage() {}

func (x *GetModulesByNameSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModulesByNameSearchResponse.ProtoReflect.Descriptor instead.
func (*GetModulesByNameSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{20}
}

func (x *GetModulesByNameSearchResponse) GetModules() []*DBModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

type UpdateModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess      *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	ModuleId          uint64            `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	ModuleName        string            `protobuf:"bytes,3,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	ModuleDescription string            `protobuf:"bytes,4,opt,name=module_description,json=moduleDescription,proto3" json:"module_description,omitempty"`
	IsPublic          bool              `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *UpdateModuleRequest) Reset() {
	*x = UpdateModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModuleRequest) ProtoMessage() {}

func (x *UpdateModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateModuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateModuleRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *UpdateModuleRequest) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *UpdateModuleRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *UpdateModuleRequest) GetModuleDescription() string {
	if x != nil {
		return x.ModuleDescription
	}
	return ""
}

func (x *UpdateModuleRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type UpdateModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateModuleResponse) Reset() {
	*x = UpdateModuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModuleResponse) ProtoMessage() {}

func (x *UpdateModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateModuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{22}
}

type DeleteModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	ModuleId     uint64            `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *DeleteModuleRequest) Reset() {
	*x = DeleteModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModuleRequest) ProtoMessage() {}

func (x *DeleteModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteModuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteModuleRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *DeleteModuleRequest) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

type DeleteModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteModuleResponse) Reset() {
	*x = DeleteModuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModuleResponse) ProtoMessage() {}

func (x *DeleteModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteModuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{24}
}

// DocService
type CreateDocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess   *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	ModuleId       uint64            `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	DocName        string            `protobuf:"bytes,3,opt,name=doc_name,json=docName,proto3" json:"doc_name,omitempty"`
	DocDescription string            `protobuf:"bytes,4,opt,name=doc_description,json=docDescription,proto3" json:"doc_description,omitempty"`
	DocSummary     string            `protobuf:"bytes,5,opt,name=doc_summary,json=docSummary,proto3" json:"doc_summary,omitempty"`
	UploadStatus   UploadStatus      `protobuf:"varint,6,opt,name=upload_status,json=uploadStatus,proto3,enum=UploadStatus" json:"upload_status,omitempty"`
	S3ObjectKey    string            `protobuf:"bytes,7,opt,name=s3_object_key,json=s3ObjectKey,proto3" json:"s3_object_key,omitempty"`
}

func (x *CreateDocRequest) Reset() {
	*x = CreateDocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDocRequest) ProtoMessage() {}

func (x *CreateDocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDocRequest.ProtoReflect.Descriptor instead.
func (*CreateDocRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{25}
}

func (x *CreateDocRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *CreateDocRequest) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *CreateDocRequest) GetDocName() string {
	if x != nil {
		return x.DocName
	}
	return ""
}

func (x *CreateDocRequest) GetDocDescription() string {
	if x != nil {
		return x.DocDescription
	}
	return ""
}

func (x *CreateDocRequest) GetDocSummary() string {
	if x != nil {
		return x.DocSummary
	}
	return ""
}

func (x *CreateDocRequest) GetUploadStatus() UploadStatus {
	if x != nil {
		return x.UploadStatus
	}
	return UploadStatus_UPLOAD_STATUS_NOT_STARTED
}

func (x *CreateDocRequest) GetS3ObjectKey() string {
	if x != nil {
		return x.S3ObjectKey
	}
	return ""
}

type CreateDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDocResponse) Reset() {
	*x = CreateDocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDocResponse) ProtoMessage() {}

func (x *CreateDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDocResponse.ProtoReflect.Descriptor instead.
func (*CreateDocResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{26}
}

type GetDocByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	DocId        uint64            `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
}

func (x *GetDocByIdRequest) Reset() {
	*x = GetDocByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocByIdRequest) ProtoMessage() {}

func (x *GetDocByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocByIdRequest.ProtoReflect.Descriptor instead.
func (*GetDocByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{27}
}

func (x *GetDocByIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetDocByIdRequest) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

type GetDocByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc *DBDoc `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *GetDocByIdResponse) Reset() {
	*x = GetDocByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocByIdResponse) ProtoMessage() {}

func (x *GetDocByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocByIdResponse.ProtoReflect.Descriptor instead.
func (*GetDocByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{28}
}

func (x *GetDocByIdResponse) GetDoc() *DBDoc {
	if x != nil {
		return x.Doc
	}
	return nil
}

type GetDocsByModuleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	ModuleId         uint64             `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetDocsByModuleIdRequest) Reset() {
	*x = GetDocsByModuleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocsByModuleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocsByModuleIdRequest) ProtoMessage() {}

func (x *GetDocsByModuleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocsByModuleIdRequest.ProtoReflect.Descriptor instead.
func (*GetDocsByModuleIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{29}
}

func (x *GetDocsByModuleIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetDocsByModuleIdRequest) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *GetDocsByModuleIdRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetDocsByModuleIdRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDocsByModuleIdRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetDocsByModuleIdRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetDocsByModuleIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docs []*DBDoc `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
}

func (x *GetDocsByModuleIdResponse) Reset() {
	*x = GetDocsByModuleIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocsByModuleIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocsByModuleIdResponse) ProtoMessage() {}

func (x *GetDocsByModuleIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocsByModuleIdResponse.ProtoReflect.Descriptor instead.
func (*GetDocsByModuleIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{30}
}

func (x *GetDocsByModuleIdResponse) GetDocs() []*DBDoc {
	if x != nil {
		return x.Docs
	}
	return nil
}

type GetDocsByNameSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	SearchQuery      string             `protobuf:"bytes,2,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetDocsByNameSearchRequest) Reset() {
	*x = GetDocsByNameSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocsByNameSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocsByNameSearchRequest) ProtoMessage() {}

func (x *GetDocsByNameSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocsByNameSearchRequest.ProtoReflect.Descriptor instead.
func (*GetDocsByNameSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{31}
}

func (x *GetDocsByNameSearchRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetDocsByNameSearchRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *GetDocsByNameSearchRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetDocsByNameSearchRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDocsByNameSearchRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetDocsByNameSearchRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetDocsByNameSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docs []*DBDoc `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
}

func (x *GetDocsByNameSearchResponse) Reset() {
	*x = GetDocsByNameSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocsByNameSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocsByNameSearchResponse) ProtoMessage() {}

func (x *GetDocsByNameSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocsByNameSearchResponse.ProtoReflect.Descriptor instead.
func (*GetDocsByNameSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{32}
}

func (x *GetDocsByNameSearchResponse) GetDocs() []*DBDoc {
	if x != nil {
		return x.Docs
	}
	return nil
}

type UpdateDocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess   *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	DocId          uint64            `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	DocName        string            `protobuf:"bytes,3,opt,name=doc_name,json=docName,proto3" json:"doc_name,omitempty"`
	DocDescription string            `protobuf:"bytes,4,opt,name=doc_description,json=docDescription,proto3" json:"doc_description,omitempty"`
	DocSummary     string            `protobuf:"bytes,5,opt,name=doc_summary,json=docSummary,proto3" json:"doc_summary,omitempty"`
	UploadStatus   UploadStatus      `protobuf:"varint,6,opt,name=upload_status,json=uploadStatus,proto3,enum=UploadStatus" json:"upload_status,omitempty"`
	S3ObjectKey    string            `protobuf:"bytes,7,opt,name=s3_object_key,json=s3ObjectKey,proto3" json:"s3_object_key,omitempty"`
}

func (x *UpdateDocRequest) Reset() {
	*x = UpdateDocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocRequest) ProtoMessage() {}

func (x *UpdateDocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateDocRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *UpdateDocRequest) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *UpdateDocRequest) GetDocName() string {
	if x != nil {
		return x.DocName
	}
	return ""
}

func (x *UpdateDocRequest) GetDocDescription() string {
	if x != nil {
		return x.DocDescription
	}
	return ""
}

func (x *UpdateDocRequest) GetDocSummary() string {
	if x != nil {
		return x.DocSummary
	}
	return ""
}

func (x *UpdateDocRequest) GetUploadStatus() UploadStatus {
	if x != nil {
		return x.UploadStatus
	}
	return UploadStatus_UPLOAD_STATUS_NOT_STARTED
}

func (x *UpdateDocRequest) GetS3ObjectKey() string {
	if x != nil {
		return x.S3ObjectKey
	}
	return ""
}

type UpdateDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDocResponse) Reset() {
	*x = UpdateDocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocResponse) ProtoMessage() {}

func (x *UpdateDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocResponse.ProtoReflect.Descriptor instead.
func (*UpdateDocResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{34}
}

type DeleteDocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	DocId        uint64            `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
}

func (x *DeleteDocRequest) Reset() {
	*x = DeleteDocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocRequest) ProtoMessage() {}

func (x *DeleteDocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteDocRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *DeleteDocRequest) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

type DeleteDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDocResponse) Reset() {
	*x = DeleteDocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocResponse) ProtoMessage() {}

func (x *DeleteDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocResponse.ProtoReflect.Descriptor instead.
func (*DeleteDocResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{36}
}

// MemoryService
type CreateMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess  *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	DocId         uint64            `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	MemoryTitle   string            `protobuf:"bytes,3,opt,name=memory_title,json=memoryTitle,proto3" json:"memory_title,omitempty"`
	MemoryContent string            `protobuf:"bytes,4,opt,name=memory_content,json=memoryContent,proto3" json:"memory_content,omitempty"`
}

func (x *CreateMemoryRequest) Reset() {
	*x = CreateMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMemoryRequest) ProtoMessage() {}

func (x *CreateMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMemoryRequest.ProtoReflect.Descriptor instead.
func (*CreateMemoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{37}
}

func (x *CreateMemoryRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *CreateMemoryRequest) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *CreateMemoryRequest) GetMemoryTitle() string {
	if x != nil {
		return x.MemoryTitle
	}
	return ""
}

func (x *CreateMemoryRequest) GetMemoryContent() string {
	if x != nil {
		return x.MemoryContent
	}
	return ""
}

type CreateMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateMemoryResponse) Reset() {
	*x = CreateMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMemoryResponse) ProtoMessage() {}

func (x *CreateMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMemoryResponse.ProtoReflect.Descriptor instead.
func (*CreateMemoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{38}
}

type GetMemoryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	MemoryId     uint64            `protobuf:"varint,2,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"`
}

func (x *GetMemoryByIdRequest) Reset() {
	*x = GetMemoryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoryByIdRequest) ProtoMessage() {}

func (x *GetMemoryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoryByIdRequest.ProtoReflect.Descriptor instead.
func (*GetMemoryByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{39}
}

func (x *GetMemoryByIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetMemoryByIdRequest) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

type GetMemoryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory *DBMemory `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *GetMemoryByIdResponse) Reset() {
	*x = GetMemoryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoryByIdResponse) ProtoMessage() {}

func (x *GetMemoryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoryByIdResponse.ProtoReflect.Descriptor instead.
func (*GetMemoryByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{40}
}

func (x *GetMemoryByIdResponse) GetMemory() *DBMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

type GetMemoriesByDocIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	DocId            uint64             `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetMemoriesByDocIdRequest) Reset() {
	*x = GetMemoriesByDocIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoriesByDocIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoriesByDocIdRequest) ProtoMessage() {}

func (x *GetMemoriesByDocIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoriesByDocIdRequest.ProtoReflect.Descriptor instead.
func (*GetMemoriesByDocIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{41}
}

func (x *GetMemoriesByDocIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetMemoriesByDocIdRequest) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *GetMemoriesByDocIdRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetMemoriesByDocIdRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMemoriesByDocIdRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetMemoriesByDocIdRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetMemoriesByDocIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memories []*DBMemory `protobuf:"bytes,1,rep,name=memories,proto3" json:"memories,omitempty"`
}

func (x *GetMemoriesByDocIdResponse) Reset() {
	*x = GetMemoriesByDocIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoriesByDocIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoriesByDocIdResponse) ProtoMessage() {}

func (x *GetMemoriesByDocIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoriesByDocIdResponse.ProtoReflect.Descriptor instead.
func (*GetMemoriesByDocIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{42}
}

func (x *GetMemoriesByDocIdResponse) GetMemories() []*DBMemory {
	if x != nil {
		return x.Memories
	}
	return nil
}

type GetMemoriesByMemoryTitleSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	SearchQuery      string             `protobuf:"bytes,2,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetMemoriesByMemoryTitleSearchRequest) Reset() {
	*x = GetMemoriesByMemoryTitleSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoriesByMemoryTitleSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoriesByMemoryTitleSearchRequest) ProtoMessage() {}

func (x *GetMemoriesByMemoryTitleSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoriesByMemoryTitleSearchRequest.ProtoReflect.Descriptor instead.
func (*GetMemoriesByMemoryTitleSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{43}
}

func (x *GetMemoriesByMemoryTitleSearchRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetMemoriesByMemoryTitleSearchRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *GetMemoriesByMemoryTitleSearchRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetMemoriesByMemoryTitleSearchRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMemoriesByMemoryTitleSearchRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetMemoriesByMemoryTitleSearchRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetMemoriesByMemoryTitleSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memories []*DBMemory `protobuf:"bytes,1,rep,name=memories,proto3" json:"memories,omitempty"`
}

func (x *GetMemoriesByMemoryTitleSearchResponse) Reset() {
	*x = GetMemoriesByMemoryTitleSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoriesByMemoryTitleSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoriesByMemoryTitleSearchResponse) ProtoMessage() {}

func (x *GetMemoriesByMemoryTitleSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoriesByMemoryTitleSearchResponse.ProtoReflect.Descriptor instead.
func (*GetMemoriesByMemoryTitleSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{44}
}

func (x *GetMemoriesByMemoryTitleSearchResponse) GetMemories() []*DBMemory {
	if x != nil {
		return x.Memories
	}
	return nil
}

type UpdateMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess  *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	MemoryId      uint64            `protobuf:"varint,2,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"`
	MemoryTitle   string            `protobuf:"bytes,3,opt,name=memory_title,json=memoryTitle,proto3" json:"memory_title,omitempty"`
	MemoryContent string            `protobuf:"bytes,4,opt,name=memory_content,json=memoryContent,proto3" json:"memory_content,omitempty"`
}

func (x *UpdateMemoryRequest) Reset() {
	*x = UpdateMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemoryRequest) ProtoMessage() {}

func (x *UpdateMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateMemoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateMemoryRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *UpdateMemoryRequest) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

func (x *UpdateMemoryRequest) GetMemoryTitle() string {
	if x != nil {
		return x.MemoryTitle
	}
	return ""
}

func (x *UpdateMemoryRequest) GetMemoryContent() string {
	if x != nil {
		return x.MemoryContent
	}
	return ""
}

type UpdateMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMemoryResponse) Reset() {
	*x = UpdateMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemoryResponse) ProtoMessage() {}

func (x *UpdateMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateMemoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{46}
}

type DeleteMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	MemoryId     uint64            `protobuf:"varint,2,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"`
}

func (x *DeleteMemoryRequest) Reset() {
	*x = DeleteMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemoryRequest) ProtoMessage() {}

func (x *DeleteMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteMemoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteMemoryRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *DeleteMemoryRequest) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

type DeleteMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMemoryResponse) Reset() {
	*x = DeleteMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemoryResponse) ProtoMessage() {}

func (x *DeleteMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteMemoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{48}
}

// QuestionService
type CreateQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess  *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	DocId         uint64            `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	QuestionTitle string            `protobuf:"bytes,3,opt,name=question_title,json=questionTitle,proto3" json:"question_title,omitempty"`
	QuestionBlob  []byte            `protobuf:"bytes,4,opt,name=question_blob,json=questionBlob,proto3" json:"question_blob,omitempty"`
	QuestionType  QuestionType      `protobuf:"varint,5,opt,name=question_type,json=questionType,proto3,enum=QuestionType" json:"question_type,omitempty"`
}

func (x *CreateQuestionRequest) Reset() {
	*x = CreateQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionRequest) ProtoMessage() {}

func (x *CreateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{49}
}

func (x *CreateQuestionRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *CreateQuestionRequest) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *CreateQuestionRequest) GetQuestionTitle() string {
	if x != nil {
		return x.QuestionTitle
	}
	return ""
}

func (x *CreateQuestionRequest) GetQuestionBlob() []byte {
	if x != nil {
		return x.QuestionBlob
	}
	return nil
}

func (x *CreateQuestionRequest) GetQuestionType() QuestionType {
	if x != nil {
		return x.QuestionType
	}
	return QuestionType_QUESTION_TYPE_UNDEFINED
}

type CreateQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateQuestionResponse) Reset() {
	*x = CreateQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionResponse) ProtoMessage() {}

func (x *CreateQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionResponse.ProtoReflect.Descriptor instead.
func (*CreateQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{50}
}

type GetQuestionByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	QuestionId   uint64            `protobuf:"varint,2,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
}

func (x *GetQuestionByIdRequest) Reset() {
	*x = GetQuestionByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionByIdRequest) ProtoMessage() {}

func (x *GetQuestionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionByIdRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{51}
}

func (x *GetQuestionByIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetQuestionByIdRequest) GetQuestionId() uint64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type GetQuestionByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *DBQuestion `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *GetQuestionByIdResponse) Reset() {
	*x = GetQuestionByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionByIdResponse) ProtoMessage() {}

func (x *GetQuestionByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionByIdResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{52}
}

func (x *GetQuestionByIdResponse) GetQuestion() *DBQuestion {
	if x != nil {
		return x.Question
	}
	return nil
}

type GetQuestionsByDocIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	DocId            uint64             `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetQuestionsByDocIdRequest) Reset() {
	*x = GetQuestionsByDocIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsByDocIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsByDocIdRequest) ProtoMessage() {}

func (x *GetQuestionsByDocIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsByDocIdRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionsByDocIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{53}
}

func (x *GetQuestionsByDocIdRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetQuestionsByDocIdRequest) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *GetQuestionsByDocIdRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetQuestionsByDocIdRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetQuestionsByDocIdRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetQuestionsByDocIdRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetQuestionsByDocIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*DBQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetQuestionsByDocIdResponse) Reset() {
	*x = GetQuestionsByDocIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsByDocIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsByDocIdResponse) ProtoMessage() {}

func (x *GetQuestionsByDocIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsByDocIdResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionsByDocIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{54}
}

func (x *GetQuestionsByDocIdResponse) GetQuestions() []*DBQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type GetQuestionsByQuestionTitleSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess     *MemberAccessKeys  `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	SearchQuery      string             `protobuf:"bytes,2,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	PageNumber       uint32             `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize         uint32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByField     ORDER_BY_FIELD     `protobuf:"varint,5,opt,name=order_by_field,json=orderByField,proto3,enum=ORDER_BY_FIELD" json:"order_by_field,omitempty"`
	OrderByDirection ORDER_BY_DIRECTION `protobuf:"varint,6,opt,name=order_by_direction,json=orderByDirection,proto3,enum=ORDER_BY_DIRECTION" json:"order_by_direction,omitempty"`
}

func (x *GetQuestionsByQuestionTitleSearchRequest) Reset() {
	*x = GetQuestionsByQuestionTitleSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsByQuestionTitleSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsByQuestionTitleSearchRequest) ProtoMessage() {}

func (x *GetQuestionsByQuestionTitleSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsByQuestionTitleSearchRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionsByQuestionTitleSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{55}
}

func (x *GetQuestionsByQuestionTitleSearchRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *GetQuestionsByQuestionTitleSearchRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *GetQuestionsByQuestionTitleSearchRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetQuestionsByQuestionTitleSearchRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetQuestionsByQuestionTitleSearchRequest) GetOrderByField() ORDER_BY_FIELD {
	if x != nil {
		return x.OrderByField
	}
	return ORDER_BY_FIELD_ORDER_BY_FIELD_UNDEFINED
}

func (x *GetQuestionsByQuestionTitleSearchRequest) GetOrderByDirection() ORDER_BY_DIRECTION {
	if x != nil {
		return x.OrderByDirection
	}
	return ORDER_BY_DIRECTION_ORDER_BY_DIRECTION_UNDEFINED
}

type GetQuestionsByQuestionTitleSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*DBQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetQuestionsByQuestionTitleSearchResponse) Reset() {
	*x = GetQuestionsByQuestionTitleSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsByQuestionTitleSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsByQuestionTitleSearchResponse) ProtoMessage() {}

func (x *GetQuestionsByQuestionTitleSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsByQuestionTitleSearchResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionsByQuestionTitleSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{56}
}

func (x *GetQuestionsByQuestionTitleSearchResponse) GetQuestions() []*DBQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type UpdateQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess  *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	QuestionId    uint64            `protobuf:"varint,2,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	QuestionTitle string            `protobuf:"bytes,3,opt,name=question_title,json=questionTitle,proto3" json:"question_title,omitempty"`
	QuestionBlob  []byte            `protobuf:"bytes,4,opt,name=question_blob,json=questionBlob,proto3" json:"question_blob,omitempty"`
	QuestionType  QuestionType      `protobuf:"varint,5,opt,name=question_type,json=questionType,proto3,enum=QuestionType" json:"question_type,omitempty"`
}

func (x *UpdateQuestionRequest) Reset() {
	*x = UpdateQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionRequest) ProtoMessage() {}

func (x *UpdateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateQuestionRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *UpdateQuestionRequest) GetQuestionId() uint64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *UpdateQuestionRequest) GetQuestionTitle() string {
	if x != nil {
		return x.QuestionTitle
	}
	return ""
}

func (x *UpdateQuestionRequest) GetQuestionBlob() []byte {
	if x != nil {
		return x.QuestionBlob
	}
	return nil
}

func (x *UpdateQuestionRequest) GetQuestionType() QuestionType {
	if x != nil {
		return x.QuestionType
	}
	return QuestionType_QUESTION_TYPE_UNDEFINED
}

type UpdateQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateQuestionResponse) Reset() {
	*x = UpdateQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionResponse) ProtoMessage() {}

func (x *UpdateQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionResponse.ProtoReflect.Descriptor instead.
func (*UpdateQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{58}
}

type DeleteQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccess *MemberAccessKeys `protobuf:"bytes,1,opt,name=member_access,json=memberAccess,proto3" json:"member_access,omitempty"`
	QuestionId   uint64            `protobuf:"varint,2,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
}

func (x *DeleteQuestionRequest) Reset() {
	*x = DeleteQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionRequest) ProtoMessage() {}

func (x *DeleteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteQuestionRequest) GetMemberAccess() *MemberAccessKeys {
	if x != nil {
		return x.MemberAccess
	}
	return nil
}

func (x *DeleteQuestionRequest) GetQuestionId() uint64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type DeleteQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteQuestionResponse) Reset() {
	*x = DeleteQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionResponse) ProtoMessage() {}

func (x *DeleteQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionResponse.ProtoReflect.Descriptor instead.
func (*DeleteQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{60}
}

// DB Models
type DBUserSubjectMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          uint64          `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubjectId       uint64          `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	UserSubjectRole UserSubjectRole `protobuf:"varint,3,opt,name=user_subject_role,json=userSubjectRole,proto3,enum=UserSubjectRole" json:"user_subject_role,omitempty"`
	IsFavourite     bool            `protobuf:"varint,4,opt,name=is_favourite,json=isFavourite,proto3" json:"is_favourite,omitempty"`
}

func (x *DBUserSubjectMap) Reset() {
	*x = DBUserSubjectMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUserSubjectMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUserSubjectMap) ProtoMessage() {}

func (x *DBUserSubjectMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUserSubjectMap.ProtoReflect.Descriptor instead.
func (*DBUserSubjectMap) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{61}
}

func (x *DBUserSubjectMap) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DBUserSubjectMap) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *DBUserSubjectMap) GetUserSubjectRole() UserSubjectRole {
	if x != nil {
		return x.UserSubjectRole
	}
	return UserSubjectRole_USER_SUBJECT_ROLE_UNDEFINED
}

func (x *DBUserSubjectMap) GetIsFavourite() bool {
	if x != nil {
		return x.IsFavourite
	}
	return false
}

type DBSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId          uint64 `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	SubjectName        string `protobuf:"bytes,2,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	SubjectDescription string `protobuf:"bytes,3,opt,name=subject_description,json=subjectDescription,proto3" json:"subject_description,omitempty"`
	IsPublic           bool   `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	CreatedTime        uint64 `protobuf:"varint,5,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime        uint64 `protobuf:"varint,6,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *DBSubject) Reset() {
	*x = DBSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBSubject) ProtoMessage() {}

func (x *DBSubject) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBSubject.ProtoReflect.Descriptor instead.
func (*DBSubject) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{62}
}

func (x *DBSubject) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *DBSubject) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *DBSubject) GetSubjectDescription() string {
	if x != nil {
		return x.SubjectDescription
	}
	return ""
}

func (x *DBSubject) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *DBSubject) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DBSubject) GetUpdatedTime() uint64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type DBSubjectModuleMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId uint64 `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	ModuleId  uint64 `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *DBSubjectModuleMap) Reset() {
	*x = DBSubjectModuleMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBSubjectModuleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBSubjectModuleMap) ProtoMessage() {}

func (x *DBSubjectModuleMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBSubjectModuleMap.ProtoReflect.Descriptor instead.
func (*DBSubjectModuleMap) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{63}
}

func (x *DBSubjectModuleMap) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *DBSubjectModuleMap) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

type DBUserModuleMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint64         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ModuleId       uint64         `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	UserModuleRole UserModuleRole `protobuf:"varint,3,opt,name=user_module_role,json=userModuleRole,proto3,enum=UserModuleRole" json:"user_module_role,omitempty"`
	IsFavourite    bool           `protobuf:"varint,4,opt,name=is_favourite,json=isFavourite,proto3" json:"is_favourite,omitempty"`
}

func (x *DBUserModuleMap) Reset() {
	*x = DBUserModuleMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUserModuleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUserModuleMap) ProtoMessage() {}

func (x *DBUserModuleMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUserModuleMap.ProtoReflect.Descriptor instead.
func (*DBUserModuleMap) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{64}
}

func (x *DBUserModuleMap) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DBUserModuleMap) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *DBUserModuleMap) GetUserModuleRole() UserModuleRole {
	if x != nil {
		return x.UserModuleRole
	}
	return UserModuleRole_USER_MODULE_ROLE_UNDEFINED
}

func (x *DBUserModuleMap) GetIsFavourite() bool {
	if x != nil {
		return x.IsFavourite
	}
	return false
}

type DBModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId          uint64 `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	ModuleName        string `protobuf:"bytes,2,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	ModuleDescription string `protobuf:"bytes,3,opt,name=module_description,json=moduleDescription,proto3" json:"module_description,omitempty"`
	IsPublic          bool   `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	CreatedTime       uint64 `protobuf:"varint,5,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime       uint64 `protobuf:"varint,6,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *DBModule) Reset() {
	*x = DBModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBModule) ProtoMessage() {}

func (x *DBModule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBModule.ProtoReflect.Descriptor instead.
func (*DBModule) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{65}
}

func (x *DBModule) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *DBModule) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *DBModule) GetModuleDescription() string {
	if x != nil {
		return x.ModuleDescription
	}
	return ""
}

func (x *DBModule) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *DBModule) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DBModule) GetUpdatedTime() uint64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type DBDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId          uint64       `protobuf:"varint,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	ModuleId       uint64       `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	DocName        string       `protobuf:"bytes,3,opt,name=doc_name,json=docName,proto3" json:"doc_name,omitempty"`
	DocDescription string       `protobuf:"bytes,4,opt,name=doc_description,json=docDescription,proto3" json:"doc_description,omitempty"`
	DocSummary     string       `protobuf:"bytes,5,opt,name=doc_summary,json=docSummary,proto3" json:"doc_summary,omitempty"`
	UploadStatus   UploadStatus `protobuf:"varint,6,opt,name=upload_status,json=uploadStatus,proto3,enum=UploadStatus" json:"upload_status,omitempty"`
	S3ObjectKey    string       `protobuf:"bytes,7,opt,name=s3_object_key,json=s3ObjectKey,proto3" json:"s3_object_key,omitempty"`
	CreatedTime    uint64       `protobuf:"varint,8,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime    uint64       `protobuf:"varint,9,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *DBDoc) Reset() {
	*x = DBDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBDoc) ProtoMessage() {}

func (x *DBDoc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBDoc.ProtoReflect.Descriptor instead.
func (*DBDoc) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{66}
}

func (x *DBDoc) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *DBDoc) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *DBDoc) GetDocName() string {
	if x != nil {
		return x.DocName
	}
	return ""
}

func (x *DBDoc) GetDocDescription() string {
	if x != nil {
		return x.DocDescription
	}
	return ""
}

func (x *DBDoc) GetDocSummary() string {
	if x != nil {
		return x.DocSummary
	}
	return ""
}

func (x *DBDoc) GetUploadStatus() UploadStatus {
	if x != nil {
		return x.UploadStatus
	}
	return UploadStatus_UPLOAD_STATUS_NOT_STARTED
}

func (x *DBDoc) GetS3ObjectKey() string {
	if x != nil {
		return x.S3ObjectKey
	}
	return ""
}

func (x *DBDoc) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DBDoc) GetUpdatedTime() uint64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type DBMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryId      uint64 `protobuf:"varint,1,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"`
	DocId         uint64 `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	MemoryTitle   string `protobuf:"bytes,3,opt,name=memory_title,json=memoryTitle,proto3" json:"memory_title,omitempty"`
	MemoryContent string `protobuf:"bytes,4,opt,name=memory_content,json=memoryContent,proto3" json:"memory_content,omitempty"`
	CreatedTime   uint64 `protobuf:"varint,5,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime   uint64 `protobuf:"varint,6,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *DBMemory) Reset() {
	*x = DBMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBMemory) ProtoMessage() {}

func (x *DBMemory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBMemory.ProtoReflect.Descriptor instead.
func (*DBMemory) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{67}
}

func (x *DBMemory) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

func (x *DBMemory) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *DBMemory) GetMemoryTitle() string {
	if x != nil {
		return x.MemoryTitle
	}
	return ""
}

func (x *DBMemory) GetMemoryContent() string {
	if x != nil {
		return x.MemoryContent
	}
	return ""
}

func (x *DBMemory) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DBMemory) GetUpdatedTime() uint64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type DBQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId    uint64       `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	DocId         uint64       `protobuf:"varint,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	QuestionTitle string       `protobuf:"bytes,3,opt,name=question_title,json=questionTitle,proto3" json:"question_title,omitempty"`
	QuestionBlob  []byte       `protobuf:"bytes,4,opt,name=question_blob,json=questionBlob,proto3" json:"question_blob,omitempty"`
	QuestionType  QuestionType `protobuf:"varint,5,opt,name=question_type,json=questionType,proto3,enum=QuestionType" json:"question_type,omitempty"`
	CreatedTime   uint64       `protobuf:"varint,6,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime   uint64       `protobuf:"varint,7,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *DBQuestion) Reset() {
	*x = DBQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBQuestion) ProtoMessage() {}

func (x *DBQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBQuestion.ProtoReflect.Descriptor instead.
func (*DBQuestion) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{68}
}

func (x *DBQuestion) GetQuestionId() uint64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *DBQuestion) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *DBQuestion) GetQuestionTitle() string {
	if x != nil {
		return x.QuestionTitle
	}
	return ""
}

func (x *DBQuestion) GetQuestionBlob() []byte {
	if x != nil {
		return x.QuestionBlob
	}
	return nil
}

func (x *DBQuestion) GetQuestionType() QuestionType {
	if x != nil {
		return x.QuestionType
	}
	return QuestionType_QUESTION_TYPE_UNDEFINED
}

func (x *DBQuestion) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DBQuestion) GetUpdatedTime() uint64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

// Question Types
type MCQChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choice    string `protobuf:"bytes,1,opt,name=choice,proto3" json:"choice,omitempty"`
	IsCorrect bool   `protobuf:"varint,2,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
}

func (x *MCQChoice) Reset() {
	*x = MCQChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MCQChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCQChoice) ProtoMessage() {}

func (x *MCQChoice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCQChoice.ProtoReflect.Descriptor instead.
func (*MCQChoice) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{69}
}

func (x *MCQChoice) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

func (x *MCQChoice) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type MCQQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []*MCQChoice `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *MCQQuestion) Reset() {
	*x = MCQQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MCQQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCQQuestion) ProtoMessage() {}

func (x *MCQQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCQQuestion.ProtoReflect.Descriptor instead.
func (*MCQQuestion) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{70}
}

func (x *MCQQuestion) GetChoices() []*MCQChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type TextInputQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *TextInputQuestion) Reset() {
	*x = TextInputQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_memory_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextInputQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextInputQuestion) ProtoMessage() {}

func (x *TextInputQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_memory_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextInputQuestion.ProtoReflect.Descriptor instead.
func (*TextInputQuestion) Descriptor() ([]byte, []int) {
	return file_proto_memory_proto_rawDescGZIP(), []int{71}
}

func (x *TextInputQuestion) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

var File_proto_memory_proto protoreflect.FileDescriptor

var file_proto_memory_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0xa0, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3e, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xed, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42,
	0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x44, 0x42, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x44, 0x42, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x42, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x35, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49,
	0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x42,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22,
	0xb2, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x42, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa4, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x32, 0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x33, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x33, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49,
	0x64, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x42, 0x44, 0x6f, 0x63, 0x52, 0x03, 0x64, 0x6f,
	0x63, 0x22, 0xa7, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x42, 0x79, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x42, 0x44, 0x6f, 0x63, 0x52, 0x04,
	0x64, 0x6f, 0x63, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63,
	0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x42, 0x44, 0x6f, 0x63, 0x52, 0x04, 0x64, 0x6f, 0x63,
	0x73, 0x22, 0x9e, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63,
	0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x6f, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x0d, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x73, 0x33, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x33, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xae, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x44, 0x42, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x22, 0xa2, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x42, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xba, 0x02, 0x0a, 0x25,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35,
	0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42,
	0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x42, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe6, 0x01, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x62, 0x12, 0x32, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x42, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x44, 0x42, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64,
	0x6f, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59,
	0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x44, 0x6f,
	0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x44, 0x42, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbd, 0x02, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x42, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf0,
	0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x32, 0x0a,
	0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x44, 0x42, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x69, 0x74, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x09, 0x44, 0x42, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x12, 0x44, 0x42, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x0f,
	0x44, 0x42, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x08, 0x44, 0x42, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xbe, 0x02, 0x0a, 0x05, 0x44, 0x42, 0x44, 0x6f, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x63,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x33, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x33, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xce, 0x01, 0x0a, 0x08, 0x44, 0x42, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64,
	0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x0a, 0x44, 0x42, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x32, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x42, 0x0a, 0x09, 0x4d, 0x43, 0x51, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x22, 0x33, 0x0a, 0x0b, 0x4d, 0x43, 0x51, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x43, 0x51, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x2a, 0x8b, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x53, 0x55, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55,
	0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x53, 0x55, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x45, 0x44, 0x49,
	0x54, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x55,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x45,
	0x52, 0x10, 0x03, 0x2a, 0x86, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d,
	0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d,
	0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c,
	0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x12,
	0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x10, 0x03, 0x2a, 0xc0, 0x01, 0x0a,
	0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x19, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x50, 0x4c, 0x4f, 0x41,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x22,
	0x0a, 0x1e, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41, 0x4c,
	0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x2a,
	0xa5, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x43, 0x51, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x41, 0x4e, 0x53, 0x57,
	0x45, 0x52, 0x5f, 0x4d, 0x43, 0x51, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x5f,
	0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x5f, 0x41,
	0x4e, 0x53, 0x57, 0x45, 0x52, 0x10, 0x04, 0x2a, 0x6f, 0x0a, 0x12, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x20, 0x0a,
	0x1c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1a, 0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x2a, 0xa1, 0x01, 0x0a, 0x0e, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x12, 0x1c, 0x0a, 0x18, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x04, 0x32, 0xc3, 0x03, 0x0a,
	0x0e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xb9, 0x03, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42,
	0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfd,
	0x02, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x12, 0x11, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x63, 0x12, 0x11, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x12, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8,
	0x03, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f,
	0x63, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x44,
	0x6f, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x26,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xee, 0x03, 0x0a, 0x0f, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x1b, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x44, 0x6f,
	0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x29, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_memory_proto_rawDescOnce sync.Once
	file_proto_memory_proto_rawDescData = file_proto_memory_proto_rawDesc
)

func file_proto_memory_proto_rawDescGZIP() []byte {
	file_proto_memory_proto_rawDescOnce.Do(func() {
		file_proto_memory_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_memory_proto_rawDescData)
	})
	return file_proto_memory_proto_rawDescData
}

var file_proto_memory_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_memory_proto_msgTypes = make([]protoimpl.MessageInfo, 72)
var file_proto_memory_proto_goTypes = []any{
	(UserSubjectRole)(0),                              // 0: UserSubjectRole
	(UserModuleRole)(0),                               // 1: UserModuleRole
	(UploadStatus)(0),                                 // 2: UploadStatus
	(QuestionType)(0),                                 // 3: QuestionType
	(ORDER_BY_DIRECTION)(0),                           // 4: ORDER_BY_DIRECTION
	(ORDER_BY_FIELD)(0),                               // 5: ORDER_BY_FIELD
	(*MemberAccessKeys)(nil),                          // 6: MemberAccessKeys
	(*CreateSubjectRequest)(nil),                      // 7: CreateSubjectRequest
	(*CreateSubjectResponse)(nil),                     // 8: CreateSubjectResponse
	(*GetSubjectByIdRequest)(nil),                     // 9: GetSubjectByIdRequest
	(*GetSubjectByIdResponse)(nil),                    // 10: GetSubjectByIdResponse
	(*GetSubjectsByUserIdRequest)(nil),                // 11: GetSubjectsByUserIdRequest
	(*GetSubjectsByUserIdResponse)(nil),               // 12: GetSubjectsByUserIdResponse
	(*GetSubjectsByNameSearchRequest)(nil),            // 13: GetSubjectsByNameSearchRequest
	(*GetSubjectsByNameSearchResponse)(nil),           // 14: GetSubjectsByNameSearchResponse
	(*UpdateSubjectRequest)(nil),                      // 15: UpdateSubjectRequest
	(*UpdateSubjectResponse)(nil),                     // 16: UpdateSubjectResponse
	(*DeleteSubjectRequest)(nil),                      // 17: DeleteSubjectRequest
	(*DeleteSubjectResponse)(nil),                     // 18: DeleteSubjectResponse
	(*CreateModuleRequest)(nil),                       // 19: CreateModuleRequest
	(*CreateModuleResponse)(nil),                      // 20: CreateModuleResponse
	(*GetModuleByIdRequest)(nil),                      // 21: GetModuleByIdRequest
	(*GetModuleByIdResponse)(nil),                     // 22: GetModuleByIdResponse
	(*GetModulesBySubjectIdRequest)(nil),              // 23: GetModulesBySubjectIdRequest
	(*GetModulesBySubjectIdResponse)(nil),             // 24: GetModulesBySubjectIdResponse
	(*GetModulesByNameSearchRequest)(nil),             // 25: GetModulesByNameSearchRequest
	(*GetModulesByNameSearchResponse)(nil),            // 26: GetModulesByNameSearchResponse
	(*UpdateModuleRequest)(nil),                       // 27: UpdateModuleRequest
	(*UpdateModuleResponse)(nil),                      // 28: UpdateModuleResponse
	(*DeleteModuleRequest)(nil),                       // 29: DeleteModuleRequest
	(*DeleteModuleResponse)(nil),                      // 30: DeleteModuleResponse
	(*CreateDocRequest)(nil),                          // 31: CreateDocRequest
	(*CreateDocResponse)(nil),                         // 32: CreateDocResponse
	(*GetDocByIdRequest)(nil),                         // 33: GetDocByIdRequest
	(*GetDocByIdResponse)(nil),                        // 34: GetDocByIdResponse
	(*GetDocsByModuleIdRequest)(nil),                  // 35: GetDocsByModuleIdRequest
	(*GetDocsByModuleIdResponse)(nil),                 // 36: GetDocsByModuleIdResponse
	(*GetDocsByNameSearchRequest)(nil),                // 37: GetDocsByNameSearchRequest
	(*GetDocsByNameSearchResponse)(nil),               // 38: GetDocsByNameSearchResponse
	(*UpdateDocRequest)(nil),                          // 39: UpdateDocRequest
	(*UpdateDocResponse)(nil),                         // 40: UpdateDocResponse
	(*DeleteDocRequest)(nil),                          // 41: DeleteDocRequest
	(*DeleteDocResponse)(nil),                         // 42: DeleteDocResponse
	(*CreateMemoryRequest)(nil),                       // 43: CreateMemoryRequest
	(*CreateMemoryResponse)(nil),                      // 44: CreateMemoryResponse
	(*GetMemoryByIdRequest)(nil),                      // 45: GetMemoryByIdRequest
	(*GetMemoryByIdResponse)(nil),                     // 46: GetMemoryByIdResponse
	(*GetMemoriesByDocIdRequest)(nil),                 // 47: GetMemoriesByDocIdRequest
	(*GetMemoriesByDocIdResponse)(nil),                // 48: GetMemoriesByDocIdResponse
	(*GetMemoriesByMemoryTitleSearchRequest)(nil),     // 49: GetMemoriesByMemoryTitleSearchRequest
	(*GetMemoriesByMemoryTitleSearchResponse)(nil),    // 50: GetMemoriesByMemoryTitleSearchResponse
	(*UpdateMemoryRequest)(nil),                       // 51: UpdateMemoryRequest
	(*UpdateMemoryResponse)(nil),                      // 52: UpdateMemoryResponse
	(*DeleteMemoryRequest)(nil),                       // 53: DeleteMemoryRequest
	(*DeleteMemoryResponse)(nil),                      // 54: DeleteMemoryResponse
	(*CreateQuestionRequest)(nil),                     // 55: CreateQuestionRequest
	(*CreateQuestionResponse)(nil),                    // 56: CreateQuestionResponse
	(*GetQuestionByIdRequest)(nil),                    // 57: GetQuestionByIdRequest
	(*GetQuestionByIdResponse)(nil),                   // 58: GetQuestionByIdResponse
	(*GetQuestionsByDocIdRequest)(nil),                // 59: GetQuestionsByDocIdRequest
	(*GetQuestionsByDocIdResponse)(nil),               // 60: GetQuestionsByDocIdResponse
	(*GetQuestionsByQuestionTitleSearchRequest)(nil),  // 61: GetQuestionsByQuestionTitleSearchRequest
	(*GetQuestionsByQuestionTitleSearchResponse)(nil), // 62: GetQuestionsByQuestionTitleSearchResponse
	(*UpdateQuestionRequest)(nil),                     // 63: UpdateQuestionRequest
	(*UpdateQuestionResponse)(nil),                    // 64: UpdateQuestionResponse
	(*DeleteQuestionRequest)(nil),                     // 65: DeleteQuestionRequest
	(*DeleteQuestionResponse)(nil),                    // 66: DeleteQuestionResponse
	(*DBUserSubjectMap)(nil),                          // 67: DBUserSubjectMap
	(*DBSubject)(nil),                                 // 68: DBSubject
	(*DBSubjectModuleMap)(nil),                        // 69: DBSubjectModuleMap
	(*DBUserModuleMap)(nil),                           // 70: DBUserModuleMap
	(*DBModule)(nil),                                  // 71: DBModule
	(*DBDoc)(nil),                                     // 72: DBDoc
	(*DBMemory)(nil),                                  // 73: DBMemory
	(*DBQuestion)(nil),                                // 74: DBQuestion
	(*MCQChoice)(nil),                                 // 75: MCQChoice
	(*MCQQuestion)(nil),                               // 76: MCQQuestion
	(*TextInputQuestion)(nil),                         // 77: TextInputQuestion
}
var file_proto_memory_proto_depIdxs = []int32{
	68, // 0: GetSubjectByIdResponse.subject:type_name -> DBSubject
	5,  // 1: GetSubjectsByUserIdRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 2: GetSubjectsByUserIdRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	68, // 3: GetSubjectsByUserIdResponse.subjects:type_name -> DBSubject
	5,  // 4: GetSubjectsByNameSearchRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 5: GetSubjectsByNameSearchRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	68, // 6: GetSubjectsByNameSearchResponse.subjects:type_name -> DBSubject
	6,  // 7: CreateModuleRequest.member_access:type_name -> MemberAccessKeys
	6,  // 8: GetModuleByIdRequest.member_access:type_name -> MemberAccessKeys
	71, // 9: GetModuleByIdResponse.module:type_name -> DBModule
	6,  // 10: GetModulesBySubjectIdRequest.member_access:type_name -> MemberAccessKeys
	5,  // 11: GetModulesBySubjectIdRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 12: GetModulesBySubjectIdRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	71, // 13: GetModulesBySubjectIdResponse.modules:type_name -> DBModule
	6,  // 14: GetModulesByNameSearchRequest.member_access:type_name -> MemberAccessKeys
	5,  // 15: GetModulesByNameSearchRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 16: GetModulesByNameSearchRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	71, // 17: GetModulesByNameSearchResponse.modules:type_name -> DBModule
	6,  // 18: UpdateModuleRequest.member_access:type_name -> MemberAccessKeys
	6,  // 19: DeleteModuleRequest.member_access:type_name -> MemberAccessKeys
	6,  // 20: CreateDocRequest.member_access:type_name -> MemberAccessKeys
	2,  // 21: CreateDocRequest.upload_status:type_name -> UploadStatus
	6,  // 22: GetDocByIdRequest.member_access:type_name -> MemberAccessKeys
	72, // 23: GetDocByIdResponse.doc:type_name -> DBDoc
	6,  // 24: GetDocsByModuleIdRequest.member_access:type_name -> MemberAccessKeys
	5,  // 25: GetDocsByModuleIdRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 26: GetDocsByModuleIdRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	72, // 27: GetDocsByModuleIdResponse.docs:type_name -> DBDoc
	6,  // 28: GetDocsByNameSearchRequest.member_access:type_name -> MemberAccessKeys
	5,  // 29: GetDocsByNameSearchRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 30: GetDocsByNameSearchRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	72, // 31: GetDocsByNameSearchResponse.docs:type_name -> DBDoc
	6,  // 32: UpdateDocRequest.member_access:type_name -> MemberAccessKeys
	2,  // 33: UpdateDocRequest.upload_status:type_name -> UploadStatus
	6,  // 34: DeleteDocRequest.member_access:type_name -> MemberAccessKeys
	6,  // 35: CreateMemoryRequest.member_access:type_name -> MemberAccessKeys
	6,  // 36: GetMemoryByIdRequest.member_access:type_name -> MemberAccessKeys
	73, // 37: GetMemoryByIdResponse.memory:type_name -> DBMemory
	6,  // 38: GetMemoriesByDocIdRequest.member_access:type_name -> MemberAccessKeys
	5,  // 39: GetMemoriesByDocIdRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 40: GetMemoriesByDocIdRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	73, // 41: GetMemoriesByDocIdResponse.memories:type_name -> DBMemory
	6,  // 42: GetMemoriesByMemoryTitleSearchRequest.member_access:type_name -> MemberAccessKeys
	5,  // 43: GetMemoriesByMemoryTitleSearchRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 44: GetMemoriesByMemoryTitleSearchRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	73, // 45: GetMemoriesByMemoryTitleSearchResponse.memories:type_name -> DBMemory
	6,  // 46: UpdateMemoryRequest.member_access:type_name -> MemberAccessKeys
	6,  // 47: DeleteMemoryRequest.member_access:type_name -> MemberAccessKeys
	6,  // 48: CreateQuestionRequest.member_access:type_name -> MemberAccessKeys
	3,  // 49: CreateQuestionRequest.question_type:type_name -> QuestionType
	6,  // 50: GetQuestionByIdRequest.member_access:type_name -> MemberAccessKeys
	74, // 51: GetQuestionByIdResponse.question:type_name -> DBQuestion
	6,  // 52: GetQuestionsByDocIdRequest.member_access:type_name -> MemberAccessKeys
	5,  // 53: GetQuestionsByDocIdRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 54: GetQuestionsByDocIdRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	74, // 55: GetQuestionsByDocIdResponse.questions:type_name -> DBQuestion
	6,  // 56: GetQuestionsByQuestionTitleSearchRequest.member_access:type_name -> MemberAccessKeys
	5,  // 57: GetQuestionsByQuestionTitleSearchRequest.order_by_field:type_name -> ORDER_BY_FIELD
	4,  // 58: GetQuestionsByQuestionTitleSearchRequest.order_by_direction:type_name -> ORDER_BY_DIRECTION
	74, // 59: GetQuestionsByQuestionTitleSearchResponse.questions:type_name -> DBQuestion
	6,  // 60: UpdateQuestionRequest.member_access:type_name -> MemberAccessKeys
	3,  // 61: UpdateQuestionRequest.question_type:type_name -> QuestionType
	6,  // 62: DeleteQuestionRequest.member_access:type_name -> MemberAccessKeys
	0,  // 63: DBUserSubjectMap.user_subject_role:type_name -> UserSubjectRole
	1,  // 64: DBUserModuleMap.user_module_role:type_name -> UserModuleRole
	2,  // 65: DBDoc.upload_status:type_name -> UploadStatus
	3,  // 66: DBQuestion.question_type:type_name -> QuestionType
	75, // 67: MCQQuestion.choices:type_name -> MCQChoice
	7,  // 68: SubjectService.CreateSubject:input_type -> CreateSubjectRequest
	9,  // 69: SubjectService.GetSubjectById:input_type -> GetSubjectByIdRequest
	11, // 70: SubjectService.GetSubjectsByUserId:input_type -> GetSubjectsByUserIdRequest
	13, // 71: SubjectService.GetSubjectsByNameSearch:input_type -> GetSubjectsByNameSearchRequest
	15, // 72: SubjectService.UpdateSubject:input_type -> UpdateSubjectRequest
	17, // 73: SubjectService.DeleteSubject:input_type -> DeleteSubjectRequest
	19, // 74: ModuleService.CreateModule:input_type -> CreateModuleRequest
	21, // 75: ModuleService.GetModuleById:input_type -> GetModuleByIdRequest
	23, // 76: ModuleService.GetModulesBySubjectId:input_type -> GetModulesBySubjectIdRequest
	25, // 77: ModuleService.GetModulesByNameSearch:input_type -> GetModulesByNameSearchRequest
	27, // 78: ModuleService.UpdateModule:input_type -> UpdateModuleRequest
	29, // 79: ModuleService.DeleteModule:input_type -> DeleteModuleRequest
	31, // 80: DocService.CreateDoc:input_type -> CreateDocRequest
	33, // 81: DocService.GetDocById:input_type -> GetDocByIdRequest
	35, // 82: DocService.GetDocsByModuleId:input_type -> GetDocsByModuleIdRequest
	37, // 83: DocService.GetDocsByNameSearch:input_type -> GetDocsByNameSearchRequest
	39, // 84: DocService.UpdateDoc:input_type -> UpdateDocRequest
	41, // 85: DocService.DeleteDoc:input_type -> DeleteDocRequest
	43, // 86: MemoryService.CreateMemory:input_type -> CreateMemoryRequest
	45, // 87: MemoryService.GetMemoryById:input_type -> GetMemoryByIdRequest
	47, // 88: MemoryService.GetMemoriesByDocId:input_type -> GetMemoriesByDocIdRequest
	49, // 89: MemoryService.GetMemoriesByMemoryTitleSearch:input_type -> GetMemoriesByMemoryTitleSearchRequest
	51, // 90: MemoryService.UpdateMemory:input_type -> UpdateMemoryRequest
	53, // 91: MemoryService.DeleteMemory:input_type -> DeleteMemoryRequest
	55, // 92: QuestionService.CreateQuestion:input_type -> CreateQuestionRequest
	57, // 93: QuestionService.GetQuestionById:input_type -> GetQuestionByIdRequest
	59, // 94: QuestionService.GetQuestionsByDocId:input_type -> GetQuestionsByDocIdRequest
	61, // 95: QuestionService.GetQuestionsByQuestionTitleSearch:input_type -> GetQuestionsByQuestionTitleSearchRequest
	63, // 96: QuestionService.UpdateQuestion:input_type -> UpdateQuestionRequest
	65, // 97: QuestionService.DeleteQuestion:input_type -> DeleteQuestionRequest
	8,  // 98: SubjectService.CreateSubject:output_type -> CreateSubjectResponse
	10, // 99: SubjectService.GetSubjectById:output_type -> GetSubjectByIdResponse
	12, // 100: SubjectService.GetSubjectsByUserId:output_type -> GetSubjectsByUserIdResponse
	14, // 101: SubjectService.GetSubjectsByNameSearch:output_type -> GetSubjectsByNameSearchResponse
	16, // 102: SubjectService.UpdateSubject:output_type -> UpdateSubjectResponse
	18, // 103: SubjectService.DeleteSubject:output_type -> DeleteSubjectResponse
	20, // 104: ModuleService.CreateModule:output_type -> CreateModuleResponse
	22, // 105: ModuleService.GetModuleById:output_type -> GetModuleByIdResponse
	24, // 106: ModuleService.GetModulesBySubjectId:output_type -> GetModulesBySubjectIdResponse
	26, // 107: ModuleService.GetModulesByNameSearch:output_type -> GetModulesByNameSearchResponse
	28, // 108: ModuleService.UpdateModule:output_type -> UpdateModuleResponse
	30, // 109: ModuleService.DeleteModule:output_type -> DeleteModuleResponse
	32, // 110: DocService.CreateDoc:output_type -> CreateDocResponse
	34, // 111: DocService.GetDocById:output_type -> GetDocByIdResponse
	36, // 112: DocService.GetDocsByModuleId:output_type -> GetDocsByModuleIdResponse
	38, // 113: DocService.GetDocsByNameSearch:output_type -> GetDocsByNameSearchResponse
	40, // 114: DocService.UpdateDoc:output_type -> UpdateDocResponse
	42, // 115: DocService.DeleteDoc:output_type -> DeleteDocResponse
	44, // 116: MemoryService.CreateMemory:output_type -> CreateMemoryResponse
	46, // 117: MemoryService.GetMemoryById:output_type -> GetMemoryByIdResponse
	48, // 118: MemoryService.GetMemoriesByDocId:output_type -> GetMemoriesByDocIdResponse
	50, // 119: MemoryService.GetMemoriesByMemoryTitleSearch:output_type -> GetMemoriesByMemoryTitleSearchResponse
	52, // 120: MemoryService.UpdateMemory:output_type -> UpdateMemoryResponse
	54, // 121: MemoryService.DeleteMemory:output_type -> DeleteMemoryResponse
	56, // 122: QuestionService.CreateQuestion:output_type -> CreateQuestionResponse
	58, // 123: QuestionService.GetQuestionById:output_type -> GetQuestionByIdResponse
	60, // 124: QuestionService.GetQuestionsByDocId:output_type -> GetQuestionsByDocIdResponse
	62, // 125: QuestionService.GetQuestionsByQuestionTitleSearch:output_type -> GetQuestionsByQuestionTitleSearchResponse
	64, // 126: QuestionService.UpdateQuestion:output_type -> UpdateQuestionResponse
	66, // 127: QuestionService.DeleteQuestion:output_type -> DeleteQuestionResponse
	98, // [98:128] is the sub-list for method output_type
	68, // [68:98] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_proto_memory_proto_init() }
func file_proto_memory_proto_init() {
	if File_proto_memory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_memory_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MemberAccessKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSubjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSubjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubjectByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubjectByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubjectsByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubjectsByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubjectsByNameSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubjectsByNameSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSubjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSubjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSubjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSubjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CreateModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateModuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetModuleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetModuleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetModulesBySubjectIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetModulesBySubjectIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetModulesByNameSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetModulesByNameSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateModuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteModuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetDocByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetDocByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GetDocsByModuleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GetDocsByModuleIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetDocsByNameSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetDocsByNameSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GetMemoryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GetMemoryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetMemoriesByDocIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GetMemoriesByDocIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GetMemoriesByMemoryTitleSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*GetMemoriesByMemoryTitleSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CreateQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CreateQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionsByDocIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionsByDocIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionsByQuestionTitleSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionsByQuestionTitleSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*DBUserSubjectMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*DBSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*DBSubjectModuleMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*DBUserModuleMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*DBModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*DBDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*DBMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*DBQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*MCQChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*MCQQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_memory_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*TextInputQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_memory_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   72,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_proto_memory_proto_goTypes,
		DependencyIndexes: file_proto_memory_proto_depIdxs,
		EnumInfos:         file_proto_memory_proto_enumTypes,
		MessageInfos:      file_proto_memory_proto_msgTypes,
	}.Build()
	File_proto_memory_proto = out.File
	file_proto_memory_proto_rawDesc = nil
	file_proto_memory_proto_goTypes = nil
	file_proto_memory_proto_depIdxs = nil
}
