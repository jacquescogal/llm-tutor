# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from src.protos import module_pb2 as protos_dot_module__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in protos/module_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ModuleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateModule = channel.unary_unary(
                '/module.ModuleService/CreateModule',
                request_serializer=protos_dot_module__pb2.CreateModuleRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.CreateModuleResponse.FromString,
                _registered_method=True)
        self.GetPublicModules = channel.unary_unary(
                '/module.ModuleService/GetPublicModules',
                request_serializer=protos_dot_module__pb2.GetPublicModulesRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.GetPublicModulesResponse.FromString,
                _registered_method=True)
        self.GetPrivateModulesByUserId = channel.unary_unary(
                '/module.ModuleService/GetPrivateModulesByUserId',
                request_serializer=protos_dot_module__pb2.GetPrivateModulesByUserIdRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.GetPrivateModulesByUserIdResponse.FromString,
                _registered_method=True)
        self.GetFavouriteModulesByUserId = channel.unary_unary(
                '/module.ModuleService/GetFavouriteModulesByUserId',
                request_serializer=protos_dot_module__pb2.GetFavouriteModulesByUserIdRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.GetFavouriteModulesByUserIdResponse.FromString,
                _registered_method=True)
        self.GetModuleById = channel.unary_unary(
                '/module.ModuleService/GetModuleById',
                request_serializer=protos_dot_module__pb2.GetModuleByIdRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.GetModuleByIdResponse.FromString,
                _registered_method=True)
        self.GetModulesBySubjectId = channel.unary_unary(
                '/module.ModuleService/GetModulesBySubjectId',
                request_serializer=protos_dot_module__pb2.GetModulesBySubjectIdRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.GetModulesBySubjectIdResponse.FromString,
                _registered_method=True)
        self.GetModulesByNameSearch = channel.unary_unary(
                '/module.ModuleService/GetModulesByNameSearch',
                request_serializer=protos_dot_module__pb2.GetModulesByNameSearchRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.GetModulesByNameSearchResponse.FromString,
                _registered_method=True)
        self.UpdateModule = channel.unary_unary(
                '/module.ModuleService/UpdateModule',
                request_serializer=protos_dot_module__pb2.UpdateModuleRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.UpdateModuleResponse.FromString,
                _registered_method=True)
        self.DeleteModule = channel.unary_unary(
                '/module.ModuleService/DeleteModule',
                request_serializer=protos_dot_module__pb2.DeleteModuleRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.DeleteModuleResponse.FromString,
                _registered_method=True)
        self.SetUserModuleFavourite = channel.unary_unary(
                '/module.ModuleService/SetUserModuleFavourite',
                request_serializer=protos_dot_module__pb2.SetUserModuleFavouriteRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.SetUserModuleFavouriteResponse.FromString,
                _registered_method=True)
        self.SetUserModuleRole = channel.unary_unary(
                '/module.ModuleService/SetUserModuleRole',
                request_serializer=protos_dot_module__pb2.SetUserModuleRoleRequest.SerializeToString,
                response_deserializer=protos_dot_module__pb2.SetUserModuleRoleResponse.FromString,
                _registered_method=True)


class ModuleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateModule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPublicModules(self, request, context):
        """public modules
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrivateModulesByUserId(self, request, context):
        """private modules
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFavouriteModulesByUserId(self, request, context):
        """favourite modules that are either public or authorised
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModuleById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModulesBySubjectId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModulesByNameSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateModule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteModule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserModuleFavourite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserModuleRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModuleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateModule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateModule,
                    request_deserializer=protos_dot_module__pb2.CreateModuleRequest.FromString,
                    response_serializer=protos_dot_module__pb2.CreateModuleResponse.SerializeToString,
            ),
            'GetPublicModules': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPublicModules,
                    request_deserializer=protos_dot_module__pb2.GetPublicModulesRequest.FromString,
                    response_serializer=protos_dot_module__pb2.GetPublicModulesResponse.SerializeToString,
            ),
            'GetPrivateModulesByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrivateModulesByUserId,
                    request_deserializer=protos_dot_module__pb2.GetPrivateModulesByUserIdRequest.FromString,
                    response_serializer=protos_dot_module__pb2.GetPrivateModulesByUserIdResponse.SerializeToString,
            ),
            'GetFavouriteModulesByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFavouriteModulesByUserId,
                    request_deserializer=protos_dot_module__pb2.GetFavouriteModulesByUserIdRequest.FromString,
                    response_serializer=protos_dot_module__pb2.GetFavouriteModulesByUserIdResponse.SerializeToString,
            ),
            'GetModuleById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModuleById,
                    request_deserializer=protos_dot_module__pb2.GetModuleByIdRequest.FromString,
                    response_serializer=protos_dot_module__pb2.GetModuleByIdResponse.SerializeToString,
            ),
            'GetModulesBySubjectId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModulesBySubjectId,
                    request_deserializer=protos_dot_module__pb2.GetModulesBySubjectIdRequest.FromString,
                    response_serializer=protos_dot_module__pb2.GetModulesBySubjectIdResponse.SerializeToString,
            ),
            'GetModulesByNameSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModulesByNameSearch,
                    request_deserializer=protos_dot_module__pb2.GetModulesByNameSearchRequest.FromString,
                    response_serializer=protos_dot_module__pb2.GetModulesByNameSearchResponse.SerializeToString,
            ),
            'UpdateModule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateModule,
                    request_deserializer=protos_dot_module__pb2.UpdateModuleRequest.FromString,
                    response_serializer=protos_dot_module__pb2.UpdateModuleResponse.SerializeToString,
            ),
            'DeleteModule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteModule,
                    request_deserializer=protos_dot_module__pb2.DeleteModuleRequest.FromString,
                    response_serializer=protos_dot_module__pb2.DeleteModuleResponse.SerializeToString,
            ),
            'SetUserModuleFavourite': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserModuleFavourite,
                    request_deserializer=protos_dot_module__pb2.SetUserModuleFavouriteRequest.FromString,
                    response_serializer=protos_dot_module__pb2.SetUserModuleFavouriteResponse.SerializeToString,
            ),
            'SetUserModuleRole': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserModuleRole,
                    request_deserializer=protos_dot_module__pb2.SetUserModuleRoleRequest.FromString,
                    response_serializer=protos_dot_module__pb2.SetUserModuleRoleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'module.ModuleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('module.ModuleService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ModuleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateModule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/CreateModule',
            protos_dot_module__pb2.CreateModuleRequest.SerializeToString,
            protos_dot_module__pb2.CreateModuleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPublicModules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/GetPublicModules',
            protos_dot_module__pb2.GetPublicModulesRequest.SerializeToString,
            protos_dot_module__pb2.GetPublicModulesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPrivateModulesByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/GetPrivateModulesByUserId',
            protos_dot_module__pb2.GetPrivateModulesByUserIdRequest.SerializeToString,
            protos_dot_module__pb2.GetPrivateModulesByUserIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFavouriteModulesByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/GetFavouriteModulesByUserId',
            protos_dot_module__pb2.GetFavouriteModulesByUserIdRequest.SerializeToString,
            protos_dot_module__pb2.GetFavouriteModulesByUserIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModuleById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/GetModuleById',
            protos_dot_module__pb2.GetModuleByIdRequest.SerializeToString,
            protos_dot_module__pb2.GetModuleByIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModulesBySubjectId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/GetModulesBySubjectId',
            protos_dot_module__pb2.GetModulesBySubjectIdRequest.SerializeToString,
            protos_dot_module__pb2.GetModulesBySubjectIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModulesByNameSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/GetModulesByNameSearch',
            protos_dot_module__pb2.GetModulesByNameSearchRequest.SerializeToString,
            protos_dot_module__pb2.GetModulesByNameSearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateModule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/UpdateModule',
            protos_dot_module__pb2.UpdateModuleRequest.SerializeToString,
            protos_dot_module__pb2.UpdateModuleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteModule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/DeleteModule',
            protos_dot_module__pb2.DeleteModuleRequest.SerializeToString,
            protos_dot_module__pb2.DeleteModuleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetUserModuleFavourite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/SetUserModuleFavourite',
            protos_dot_module__pb2.SetUserModuleFavouriteRequest.SerializeToString,
            protos_dot_module__pb2.SetUserModuleFavouriteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetUserModuleRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/module.ModuleService/SetUserModuleRole',
            protos_dot_module__pb2.SetUserModuleRoleRequest.SerializeToString,
            protos_dot_module__pb2.SetUserModuleRoleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
